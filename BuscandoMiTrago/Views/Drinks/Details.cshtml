@model DrinksViewModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="card mb-2">
    <div class="card-header">
        <div class="row">
            <div class="col-8">
                <h5 id="hUser"></h5>
            </div>
            <div class="col-4">
                <button id="btnChange" onclick="Change()" class="btn btn-sm btn-outline-primary" title="It's not your name. Change it!">Other User</button>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-8">
                <div id="dIsFav" class="collapse">
                    <span class="text-warning fas fa-star mr-2"></span>Great! It's one of your favorite drinks!
                </div>
            </div>
            <div class="col-4">
                <button id="btnFav" onclick="Fav()" class="btn btn-sm btn-outline-success"><span class="fas fa-star mr-2"></span>It's my favorite!</button>
                <button id="btnUnFav" onclick="UnFav()" class="btn btn-sm btn-outline-danger collapse"><span class="fas fa-thumbs-down mr-2"></span>Not Favorite</button>
            </div>
        </div>
    </div>
    <div class="card-footer collapse">
    </div>
</div>
<h1>Details</h1>

<div>
    <h4>Drink</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            ID
        </dt>
        <dd class = "col-sm-10">
            <div class="row">
                <div class="col-6">
                    @Html.DisplayFor(model => model.IdDrinkNavigation.IdDrink)
                </div>
                <div class="col-3">
                </div>
                <div class="col-3">
                </div>
            </div>
        </dd>
        <dt class = "col-sm-2">
            Drink
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdDrinkNavigation.StrDrink)
        </dd>
        <dt class = "col-sm-2">
            Description
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdDrinkNavigation.StrDescription)
        </dd>
        <dt class = "col-sm-2">
            Photo
        </dt>
        <dd class = "col-sm-10">
            <img src="@(Model.IdDrinkNavigation.StrDrinkThumb)"/>
        </dd>
        <dt class = "col-sm-2">
            Category
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdDrinkNavigation.StrCategory)
        </dd>
        <dt class = "col-sm-2">
            Glass
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdDrinkNavigation.StrGlass)
        </dd>
        <dt class = "col-sm-2">
            Ingredient 1
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdDrinkNavigation.StrIngredient1)
        </dd>
        <dt class = "col-sm-2">
            Ingredient 2
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdDrinkNavigation.StrIngredient2)
        </dd>
        <dt class = "col-sm-2">
            Ingredient 3
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdDrinkNavigation.StrIngredient3)
        </dd>
        <dt class = "col-sm-2">
            Ingredient 4
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdDrinkNavigation.StrIngredient4)
        </dd>
        <dt class = "col-sm-2">
            Ingredient 5
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdDrinkNavigation.StrIngredient5)
        </dd>
        <dt class = "col-sm-2">
            Alcoholic
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdDrinkNavigation.StrAlcoholic)
        </dd>
        <dt class = "col-sm-2">
            Instructions
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdDrinkNavigation.StrInstructions)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Index" 
                asp-route-M="@Model.M"
                asp-route-C="@Model.C"
                asp-route-G="@Model.G"
                asp-route-I="@Model.I"
                asp-route-A="@Model.A"
                asp-route-S="@Model.S"
                asp-route-F="@Model.F"
                >Back to List</a>
</div>
@section Scripts 
{
    <script>
        var currUser;
        var currId;
        var dIsFav;
        var btnFav;
        var btnUnFav;
        var hUser;
        window.onload = function()
        {
            if(localStorage.user == undefined)
            {
                currUser = "Gerardo";
                localStorage.user = "Gerardo";
            }
            else
            {
                currUser = localStorage.user;
            }
            currId = @(Model.IdDrink);
            dIsFav = document.getElementById("dIsFav");
            btnFav = document.getElementById("btnFav");
            btnUnFav = document.getElementById("btnUnFav");
            hUser = document.getElementById("hUser");

            init();

            //localStorage.clear();
        }
        function init()
        {
            let existsCurrentUser = SearchUser(currUser);
            if (!existsCurrentUser)
            {
                var userFavs = 
                [{
                    name: "Gerardo",
                    id: [12560,12728]
                },
                {
                    name: "Juan",
                    id: [12560]
                }];
                localStorage.users = JSON.stringify(userFavs);
            }
            else
            {
            }
            SetFavs();
        }
        function SetFavs()
        {
            hUser.innerText = currUser;
            dIsFav.classList.add("collapse");
            btnUnFav.classList.add("collapse");
            btnFav.classList.remove("collapse");
            let users = JSON.parse(localStorage.users);
            for(let u = 0; u < users.length; u++)
            {
                if(users[u].name == currUser)
                {
                    for(let i = 0; i < users[u].id.length; i++)
                    {
                        if(users[u].id[i] == currId)
                        {
                            dIsFav.classList.remove("collapse");
                            btnUnFav.classList.remove("collapse");
                            btnFav.classList.add("collapse");
                        }
                    }
                }
            }
        }
        function SearchUser(name)
        {
            let existsUser = false;
            if(localStorage.users == undefined)
            {
                return false;
            }
            let users = JSON.parse(localStorage.users);
            for(let u = 0; u < users.length;u++)
            {
                if (users[u].name == name)
                {
                    existsUser = true;
                    break;
                }
            }
            return existsUser;
        }
        function Change()
        {
            var user = prompt("Enter your name, please:", "Gerardo");
            if (user != null && user != currUser) {
                currUser = user;
                localStorage.removeItem("user");
                localStorage.user = currUser;
                SetFavs();
            }
        }
        function Fav()
        {
             let users = JSON.parse(localStorage.users);
             let exists = SearchUser(currUser);
             if(!exists)
             {
                 var userFavs = 
                {
                    name: currUser,
                    id: [currId]
                };
                users.push(userFavs);
                localStorage.removeItem("users");
                localStorage.users = JSON.stringify(users);
            }
            else
            {
                for(let u = 0; u < users.length; u++)
                {
                    if(users[u].name == currUser)
                    {
                        users[u].id.push(currId);
                        break;
                    }
                }
                localStorage.removeItem("users");
                localStorage.users = JSON.stringify(users);
            }
            SetFavs();
       }
        function UnFav(id)
        {
             let users = JSON.parse(localStorage.users);
             let exists = SearchUser(currUser);
             if(exists)
             {
                for(let u = 0; u < users.length; u++)
                {
                    if(users[u].name == currUser)
                    {
                        users[u].id.splice (users[u].id.indexOf(currId), 1);
                        break;
                    }
                }
                localStorage.removeItem("users");
                localStorage.users = JSON.stringify(users);
            }
            SetFavs();
        }
    </script>
}